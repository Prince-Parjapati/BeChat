// import { ethers } from "ethers";
// import Web3Modal from "web3modal";
// import axios from "axios";

// import socialMediaDapp from "./SocialMediaDapp.json";

// export const CONTRACT_ABI = socialMediaDapp.abi;
// export const CONTRACT_ADDRESS = "0x5FbDB2315678afecb367f032d93F642f64180aa3";

// //PINATA KEYS
// export const PINATA_API_KEY = "3106b4ffae6483cf0205";
// export const PINATA_SECRECT_KEY = "d065b08d28936073a1423f32d596a56e4a8508fc93881acac788fdacb7286aea";

// //NETWORK
// const networks = {
//   // polygon_amoy: {
//   //   chainId: `0x${Number(80002).toString(16)}`,
//   //   chainName: "Testnet",
//   //   nativeCurrency: {
//   //     name: "MATIC",
//   //     symbol: "MATIC",
//   //     decimals: 18,
//   //   },
//   //   rpcUrls: ["https://polygon-amoy.g.alchemy.com/v2/"],
//   //   blockExplorerUrls: ["https://www.oklink.com/amoy"],
//   // },
//   // polygon_mumbai: {
//   //   chainId: `0x${Number(80001).toString(16)}`,
//   //   chainName: "Polygon Mumbai",
//   //   nativeCurrency: {
//   //     name: "MATIC",
//   //     symbol: "MATIC",
//   //     decimals: 18,
//   //   },
//   //   rpcUrls: ["https://rpc.ankr.com/polygon_mumbai"],
//   //   blockExplorerUrls: ["https://mumbai.polygonscan.com/"],
//   // },
//   // polygon: {
//   //   chainId: `0x${Number(137).toString(16)}`,
//   //   chainName: "Polygon Mainnet",
//   //   nativeCurrency: {
//   //     name: "MATIC",
//   //     symbol: "MATIC",
//   //     decimals: 18,
//   //   },
//   //   rpcUrls: ["https://rpc.ankr.com/polygon"],
//   //   blockExplorerUrls: ["https://polygonscan.com/"],
//   // },
//   // bsc: {
//   //   chainId: `0x${Number(56).toString(16)}`,
//   //   chainName: "Binance Smart Chain Mainnet",
//   //   nativeCurrency: {
//   //     name: "Binance Chain Native Token",
//   //     symbol: "BNB",
//   //     decimals: 18,
//   //   },
//   //   rpcUrls: ["https://rpc.ankr.com/bsc"],
//   //   blockExplorerUrls: ["https://bscscan.com"],
//   // },
//   testent: {
//     chainId: `0x${Number(11155111).toString(16)}`,
//     chainName: "Sepolia",
//     nativeCurrency: {
//       name: "ETH",
//       symbol: "ETH",
//       decimals: 18,
//     },
//     rpcUrls: ["https://rpc.sepolia.org"],
//     blockExplorerUrls: ["https://sepolia.etherscan.io"],
//   },
//   base_sepolia: {
//     chainId: `0x${Number(84532).toString(16)}`,
//     chainName: "Base Sepolia",
//     nativeCurrency: {
//       name: "ETH",
//       symbol: "ETH",
//       decimals: 18,
//     },
//     rpcUrls: ["https://sepolia.base.org"],
//     blockExplorerUrls: ["https://bscscan.com"],
//   },
//   localhost: {
//     chainId: `0x${Number(31337).toString(16)}`,
//     chainName: "localhost",
//     nativeCurrency: {
//       name: "GO",
//       symbol: "GO",
//       decimals: 18,
//     },
//     rpcUrls: ["http://127.0.0.1:8545/"],
//     blockExplorerUrls: ["https://bscscan.com"],
//   }
// };

// const changeNetwork = async ({ networkName }) => {
//   try {
//     if (!window.ethereum) throw new Error("No crypto wallet found");
//     await window.ethereum.request({
//       method: "wallet_addEthereumChain",
//       params: [
//         {
//           ...networks[networkName],
//         },
//       ],
//     });
//   } catch (err) {
//     console.log(err.message);
//   }
// };

// export const handleNetworkSwitch = async () => {
//   const networkName = "testent";
//   await changeNetwork({ networkName });
// };

// export const checkIfWalletConnected = async () => {
//   if (!window.ethereum) return console.log("Please Install MetaMask");
//   const network = await handleNetworkSwitch();

//   const account = await window.ethereum.request({ method: "eth_accounts" });

//   if (account.length) {
//     return account[0];
//   } else {
//     console.log("Please Install MetaMask & Connect, Reload");
//   }
// };

// export const connectWallet = async () => {
//   try {
//     if (!window.ethereum) return alert("Please install MetaMask");
//     const network = await handleNetworkSwitch();
//     const accounts = await window.ethereum.request({
//       method: "eth_requestAccounts",
//     });

//     return accounts[0];
//   } catch (error) {
//     console.log(error);
//   }
// };
